
#include <iostream>
#include <string>

const int DIGITS = 10;
const int ROWS = 5;
const int COLS = 5;

char digitArrays[DIGITS][ROWS][COLS] = {
    // 0
    {
        {'-', '-', '-', '-', '-'},
        {'|', ' ', ' ', ' ', '|'},
        {'|', ' ', ' ', ' ', '|'},
        {'|', ' ', ' ', ' ', '|'},
        {'-', '-', '-', '-', '-'}
    },
    // 1
    {
        {' ',' ', ' ', ' ', '-'},
        {' ', ' ', ' ', ' ', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {' ', ' ', ' ', ' ', '-'}
    },
    // 2
    {
        {'-', '-', '-', '-', '-'},
        {' ', ' ', ' ', ' ', '|'},
        {'|', '-', '-', '-', '|'},
        {'|', ' ', ' ', ' ', ' '},
        {'-', '-', '-', '-', '-'}
    },
    // 3
    {
        {'-', '-', '-', '-', '-'},
        {' ', ' ', ' ', ' ', '|'},
        {'|', '-', '-', '-', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {'-', '-', '-', '-', '-'}
    },
    // 4
    {
        {'-', ' ', ' ', ' ', '-'},
        {'|', ' ', ' ', ' ', '|'},
        {'|', '-', '-', '-', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {' ', ' ', ' ', ' ', '-'}
    },
    // 5
    {
        {'-', '-', '-', '-', '-'},
        {'|', ' ', ' ', ' ', ' '},
        {'|', '-', '-', '-', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {'-', '-', '-', '-', '-'}
    },
    // 6
    {
        {'-', '-', '-', '-', '-'},
        {'|', ' ', ' ', ' ', ' '},
        {'|', '-', '-', '-', '|'},
        {'|', ' ', ' ', ' ', '|'},
        {'-', '-', '-', '-', '-'}
    },
    // 7
    {
        {'-', '-', '-', '-', '-'},
        {' ', ' ', ' ', ' ', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {' ', ' ', ' ', ' ', '-'}
    },
    // 8
    {
        {'-', '-', '-', '-', '-'},
        {'|', ' ', ' ', ' ', '|'},
        {'|', '-', '-', '-', '|'},
        {'|', ' ', ' ', ' ', '|'},
        {'-', '-', '-', '-', '-'}
    },
    // 9
    {
        {'-', '-', '-', '-', '-'},
        {'|', ' ', ' ', ' ', '|'},
        {'|', '-', '-', '-', '|'},
        {' ', ' ', ' ', ' ', '|'},
        {'-', '-', '-', '-', '-'}
    }
};

int main() {
    int testCases;
    std::cin >> testCases;
    for (int testCase = 0; testCase < testCases; testCase++) {
        std::string number;
        std::cin >> number;

        for (int row = 0; row < ROWS; row++) {
            for (int i = 0; i < number.length(); i++) {
                int digitIndex = number[i] - '0';
                for (int col = 0; col < COLS; col++) {
                    std::cout << digitArrays[digitIndex][row][col];
                }
                if (i != number.length() - 1) std::cout << " "; // Only print space between digits, not after the last one
            }
            if (!(testCase == testCases - 1 && row == ROWS - 1)) {
                std::cout << std::endl; // Avoid printing newline after the last row of the last test case
            }
        }
    }

    return 0;
}